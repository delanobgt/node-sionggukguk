<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/stylesheets/debts/show.css">
    <title>SiongGukGuk's Debts</title>
    
    <style>
      #strukDOM {
        border: 5px solid lightgray;
        background: white;
        font-size: 14px;
        font-family: monospace;
        padding: 10px;
        margin: 20px 40px;
        /* transform: rotate(-90deg) translate(-60px, 0px); */
      }
      #widthSlider {
        width: 200px;
      }
    </style>
	</head>

	<body>
    <br>
    <div class="container">
      <div class="form-group">
        <label for="target_date">Per tanggal</label>
        <input type="date" class="form-control" value="<%=moment().format("YYYY-MM-DD")%>" id="target_date" name="targetDate" placeholder="yyyy/mm/dd" required>
      </div>
    </div>
    <div id="strukDOM"></div>
    <br>
    <div class="container">
      Receipt Width: &nbsp;&nbsp;<input type="range" min="1" max="500" value="50" id="widthSlider">
      <br><br>
      <a id="downloadLink" class="btn btn-primary">Download</a>
      <br><br>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment.min.js"></script>
    <script src="http://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
    <script>
      function giveComma(numberStr) {
        let noComma = (numberStr+'').replace(/[,\.]/g, "");
        let withComma = Number(noComma).toLocaleString('en', {
          maximumSignificantDigits : 21,
          maximumFractionDigits: 20
        });
        return withComma;
      }

      let debt = {
        title: "<%=debt.title%>",
        startDate: new Date("<%=moment(debt.startDate).format('YYYY-MM-DD')%>"),
        capital: <%=debt.capital%>,
        rate: <%=debt.rate%>,
        extras: []
      };
      <% for (let extra of debt.extras) { %>
        debt.extras.push({description: "<%=extra.description%>", cost: <%=extra.cost%>});
      <% } %>

      let strukDOM = document.getElementById("strukDOM");
      function reloadStrukDOM(targetDate) {
        let newHTML =
          `
            PERHITUNGAN HUTANG DENGAN MARULI TANARY MULAI TANGGAL ${moment(debt.startDate).format("D MMMM YYYY")}<br>
            BUNGA ${debt.rate}% PER BULAN (IDR)<br>
            <br>
            HUTANG PER TANGGAL ${moment(debt.startDate).format("D MMMM YYYY")} 
            <span style="float: right">${giveComma(debt.capital)}</span><br>

            BUNGA DARI ${giveComma(debt.capital)} = ${giveComma(Math.floor(debt.capital*(debt.rate/100)*12/365))}<br>
          `;

        let ratePerDay = Math.floor(debt.capital*(debt.rate/100)*12/365);
        let target = moment(targetDate).endOf('day');
        let currentDate = moment(debt.startDate);
        let totalDebt = debt.capital;
        while(currentDate.isSameOrBefore(target)) {
          let endDate = moment(currentDate).endOf('month');
          if (endDate.isAfter(target)) endDate = moment(target)

          let diffDay = endDate.diff(currentDate, 'days') + 1;

          newHTML += 
            `
              ${currentDate.format("DD MMM")} s/d ${endDate.format("DD MMM YYYY")}
              = ${diffDay} hari
              <span style="float: right;">${giveComma(diffDay*ratePerDay)}</span>
              <br>
            `;

          currentDate = moment(endDate);
          currentDate.add(1, 'days');
          totalDebt += diffDay*ratePerDay
        }

        newHTML += `<span style="float: right;">---------------</span><br>`;
        newHTML += `<span style="float: right;">${giveComma(totalDebt)}</span><br>`;

        for (let extra of debt.extras) {
          newHTML += `${extra.description} <span style="float: right;">${giveComma(extra.cost)}</span><br>`;
          totalDebt += extra.cost;
        }
        newHTML += `<span style="float: right;">---------------</span><br>`;

        newHTML += `Total hutang per tanggal ${target.format("D MMMM YYYY")}`;
        newHTML += `<span style="float: right;">${giveComma(totalDebt)}</span><br>`;

        strukDOM.innerHTML = newHTML;
      }

      //HTML2canvas stuff
      let canvasRef = document.createElement('canvas');
      function redrawCanvas() {
        let border = strukDOM.style.border;
        strukDOM.style.border = "none";
        html2canvas(document.querySelector("#strukDOM")).then(canvas => {
          strukDOM.style.border = border;
          canvasRef = canvas;
          rebindDownloadLink();
        }); 
      }

      //rebind download link
      let downloadLink = document.getElementById('downloadLink');
      function rebindDownloadLink() {
        downloadLink.setAttribute('download', moment(targetDate.value).format('DD-MM-YYYY')+'.png');
        downloadLink.setAttribute('href', canvasRef.toDataURL("image/png").replace("image/png", "image/octet-stream"));
      }

      const canvasWidth = 450;
      widthSlider = document.getElementById('widthSlider');
      strukDOM.setAttribute("style", `display: block; width:${canvasWidth}px;`);
      document.getElementById('widthSlider').oninput = () => {
        console.log(canvasWidth+widthSlider.value);
        strukDOM.setAttribute("style", `display: block; width:${canvasWidth+(+widthSlider.value)}px;`);
        reloadStrukDOM(new Date(targetDate.value));
        redrawCanvas();
      };

      //dateOnChange listener
      let targetDate = document.getElementById('target_date');
      targetDate.onchange = () => {
        reloadStrukDOM(new Date(targetDate.value));
        redrawCanvas();
      };

      reloadStrukDOM(new Date(targetDate.value));
      redrawCanvas();
    </script>

<% include ../partials/debtsFooter %>
